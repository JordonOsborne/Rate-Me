{"ast":null,"code":"var _jsxFileName = \"/Users/osborne/feedback-app/src/Components/Stats.jsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes from \"prop-types\";\nimport { useContext } from \"react\";\nimport Feedback from \"../Context/Feedback\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Stats() {\n  _s();\n\n  const {\n    feedback\n  } = useContext(Feedback);\n  const Reviews = feedback.length;\n  let Sum = feedback.reduce((a, b) => a + b.rating, 0);\n  const Average = (Sum / Reviews).toFixed(1).replace(/[.,]0$/, \"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedback-stats\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [Reviews, \" Reviews\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), isNaN(Average) ? null : /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Average Rating of \", Average]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Stats, \"RNPzS9Jfq5OTQN+7+1vdg6m3Kwc=\");\n\n_c = Stats;\nStats.propTypes = {\n  feedback: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    rating: PropTypes.number.isRequired,\n    comments: PropTypes.string\n  }))\n};\nexport default Stats;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stats\");","map":{"version":3,"names":["PropTypes","useContext","Feedback","Stats","feedback","Reviews","length","Sum","reduce","a","b","rating","Average","toFixed","replace","isNaN","propTypes","arrayOf","shape","id","string","isRequired","number","comments"],"sources":["/Users/osborne/feedback-app/src/Components/Stats.jsx"],"sourcesContent":["import PropTypes from \"prop-types\"\nimport { useContext } from \"react\"\nimport Feedback from \"../Context/Feedback\"\n\nfunction Stats() {\n  const { feedback } = useContext(Feedback)\n  const Reviews = feedback.length\n  let Sum = feedback.reduce((a, b) => a + b.rating, 0)\n  const Average = (Sum / Reviews).toFixed(1).replace(/[.,]0$/, \"\")\n  return (\n    <div className='feedback-stats'>\n      <h4>{Reviews} Reviews</h4>\n      {isNaN(Average) ? null : <h4>Average Rating of {Average}</h4>}\n    </div>\n  )\n}\nStats.propTypes = {\n  feedback: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      rating: PropTypes.number.isRequired,\n      comments: PropTypes.string,\n    })\n  ),\n}\nexport default Stats\n"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,QAAP,MAAqB,qBAArB;;;AAEA,SAASC,KAAT,GAAiB;EAAA;;EACf,MAAM;IAAEC;EAAF,IAAeH,UAAU,CAACC,QAAD,CAA/B;EACA,MAAMG,OAAO,GAAGD,QAAQ,CAACE,MAAzB;EACA,IAAIC,GAAG,GAAGH,QAAQ,CAACI,MAAT,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAC,CAACC,MAAhC,EAAwC,CAAxC,CAAV;EACA,MAAMC,OAAO,GAAG,CAACL,GAAG,GAAGF,OAAP,EAAgBQ,OAAhB,CAAwB,CAAxB,EAA2BC,OAA3B,CAAmC,QAAnC,EAA6C,EAA7C,CAAhB;EACA,oBACE;IAAK,SAAS,EAAC,gBAAf;IAAA,wBACE;MAAA,WAAKT,OAAL;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEGU,KAAK,CAACH,OAAD,CAAL,GAAiB,IAAjB,gBAAwB;MAAA,iCAAuBA,OAAvB;IAAA;MAAA;MAAA;MAAA;IAAA,QAF3B;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GAXQT,K;;KAAAA,K;AAYTA,KAAK,CAACa,SAAN,GAAkB;EAChBZ,QAAQ,EAAEJ,SAAS,CAACiB,OAAV,CACRjB,SAAS,CAACkB,KAAV,CAAgB;IACdC,EAAE,EAAEnB,SAAS,CAACoB,MAAV,CAAiBC,UADP;IAEdV,MAAM,EAAEX,SAAS,CAACsB,MAAV,CAAiBD,UAFX;IAGdE,QAAQ,EAAEvB,SAAS,CAACoB;EAHN,CAAhB,CADQ;AADM,CAAlB;AASA,eAAejB,KAAf"},"metadata":{},"sourceType":"module"}