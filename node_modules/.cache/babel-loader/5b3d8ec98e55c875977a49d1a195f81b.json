{"ast":null,"code":"var _jsxFileName = \"/Users/osborne/feedback-app/src/Components/Form.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport RatingSelect from \"./RatingSelect\";\nimport Card from \"./Shared/Card\";\nimport Button from \"./Shared/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form(updateFeedback) {\n  _s();\n\n  const [comments, setComments] = useState(\"\");\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [rating, setRating] = useState(null);\n\n  const changeRating = e => {\n    setIsDisabled(false);\n\n    if (e.currentTarget.getAttribute(\"value\") === rating) {\n      setRating(null);\n    }\n\n    setRating(+e.currentTarget.getAttribute(\"value\"));\n  };\n\n  const changeComment = e => {\n    setComments(e.target.value);\n  };\n\n  const validateForm = e => {\n    e.preventDefault();\n    let submitComments = comments;\n\n    if (rating === null) {\n      setErrorMessage(\"Please select a rating prior to submitting.\");\n    }\n\n    if (submitComments.trim().length === 0) {\n      submitComments = null;\n    }\n\n    updateFeedback(rating, submitComments);\n  };\n\n  const submitForm = (rating, comments) => {\n    const newFeedback = {\n      rating,\n      comments\n    };\n    console.log(newFeedback);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: validateForm,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"How would you rate your experience?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RatingSelect, {\n        select: changeRating,\n        rating: rating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"Comments\",\n          id: \"Comments\",\n          rows: \"5\",\n          placeholder: \"Write a review . . .\",\n          value: comments,\n          onChange: changeComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        isDisabled: isDisabled,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"BtvHZs83rSlkdG3+oaxWokAFTX4=\");\n\n_c = Form;\nForm.propTypes = {\n  updateFeedback: PropTypes.func\n};\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","PropTypes","RatingSelect","Card","Button","Form","updateFeedback","comments","setComments","isDisabled","setIsDisabled","errorMessage","setErrorMessage","rating","setRating","changeRating","e","currentTarget","getAttribute","changeComment","target","value","validateForm","preventDefault","submitComments","trim","length","submitForm","newFeedback","console","log","propTypes","func"],"sources":["/Users/osborne/feedback-app/src/Components/Form.jsx"],"sourcesContent":["import { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport RatingSelect from \"./RatingSelect\"\nimport Card from \"./Shared/Card\"\nimport Button from \"./Shared/Button\"\nfunction Form(updateFeedback) {\n  const [comments, setComments] = useState(\"\")\n  const [isDisabled, setIsDisabled] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(\"\")\n  const [rating, setRating] = useState(null)\n\n  const changeRating = (e) => {\n    setIsDisabled(false)\n    if (e.currentTarget.getAttribute(\"value\") === rating) {\n      setRating(null)\n    }\n    setRating(+e.currentTarget.getAttribute(\"value\"))\n  }\n\n  const changeComment = (e) => {\n    setComments(e.target.value)\n  }\n\n  const validateForm = (e) => {\n    e.preventDefault()\n    let submitComments = comments\n    if (rating === null) {\n      setErrorMessage(\"Please select a rating prior to submitting.\")\n    }\n    if (submitComments.trim().length === 0) {\n      submitComments = null\n    }\n    updateFeedback(rating, submitComments)\n  }\n  const submitForm = (rating, comments) => {\n    const newFeedback = {\n      rating,\n      comments,\n    }\n    console.log(newFeedback)\n  }\n  return (\n    <Card>\n      <form onSubmit={validateForm}>\n        <h2>How would you rate your experience?</h2>\n        <RatingSelect select={changeRating} rating={rating} />\n        {errorMessage && <p className='error'>{errorMessage}</p>}\n        <div className='input-group'>\n          <textarea\n            name='Comments'\n            id='Comments'\n            rows='5'\n            placeholder='Write a review . . .'\n            value={comments}\n            onChange={changeComment}\n          ></textarea>\n        </div>\n        <Button type='submit' isDisabled={isDisabled}>\n          Submit\n        </Button>\n      </form>\n    </Card>\n  )\n}\n\nForm.propTypes = {\n  updateFeedback: PropTypes.func,\n}\nexport default Form\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;;AACA,SAASC,IAAT,CAAcC,cAAd,EAA8B;EAAA;;EAC5B,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,IAAD,CAA5C;EACA,MAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,IAAD,CAApC;;EAEA,MAAMe,YAAY,GAAIC,CAAD,IAAO;IAC1BN,aAAa,CAAC,KAAD,CAAb;;IACA,IAAIM,CAAC,CAACC,aAAF,CAAgBC,YAAhB,CAA6B,OAA7B,MAA0CL,MAA9C,EAAsD;MACpDC,SAAS,CAAC,IAAD,CAAT;IACD;;IACDA,SAAS,CAAC,CAACE,CAAC,CAACC,aAAF,CAAgBC,YAAhB,CAA6B,OAA7B,CAAF,CAAT;EACD,CAND;;EAQA,MAAMC,aAAa,GAAIH,CAAD,IAAO;IAC3BR,WAAW,CAACQ,CAAC,CAACI,MAAF,CAASC,KAAV,CAAX;EACD,CAFD;;EAIA,MAAMC,YAAY,GAAIN,CAAD,IAAO;IAC1BA,CAAC,CAACO,cAAF;IACA,IAAIC,cAAc,GAAGjB,QAArB;;IACA,IAAIM,MAAM,KAAK,IAAf,EAAqB;MACnBD,eAAe,CAAC,6CAAD,CAAf;IACD;;IACD,IAAIY,cAAc,CAACC,IAAf,GAAsBC,MAAtB,KAAiC,CAArC,EAAwC;MACtCF,cAAc,GAAG,IAAjB;IACD;;IACDlB,cAAc,CAACO,MAAD,EAASW,cAAT,CAAd;EACD,CAVD;;EAWA,MAAMG,UAAU,GAAG,CAACd,MAAD,EAASN,QAAT,KAAsB;IACvC,MAAMqB,WAAW,GAAG;MAClBf,MADkB;MAElBN;IAFkB,CAApB;IAIAsB,OAAO,CAACC,GAAR,CAAYF,WAAZ;EACD,CAND;;EAOA,oBACE,QAAC,IAAD;IAAA,uBACE;MAAM,QAAQ,EAAEN,YAAhB;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,YAAD;QAAc,MAAM,EAAEP,YAAtB;QAAoC,MAAM,EAAEF;MAA5C;QAAA;QAAA;QAAA;MAAA,QAFF,EAGGF,YAAY,iBAAI;QAAG,SAAS,EAAC,OAAb;QAAA,UAAsBA;MAAtB;QAAA;QAAA;QAAA;MAAA,QAHnB,eAIE;QAAK,SAAS,EAAC,aAAf;QAAA,uBACE;UACE,IAAI,EAAC,UADP;UAEE,EAAE,EAAC,UAFL;UAGE,IAAI,EAAC,GAHP;UAIE,WAAW,EAAC,sBAJd;UAKE,KAAK,EAAEJ,QALT;UAME,QAAQ,EAAEY;QANZ;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAJF,eAcE,QAAC,MAAD;QAAQ,IAAI,EAAC,QAAb;QAAsB,UAAU,EAAEV,UAAlC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAdF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD;;GA1DQJ,I;;KAAAA,I;AA4DTA,IAAI,CAAC0B,SAAL,GAAiB;EACfzB,cAAc,EAAEL,SAAS,CAAC+B;AADX,CAAjB;AAGA,eAAe3B,IAAf"},"metadata":{},"sourceType":"module"}