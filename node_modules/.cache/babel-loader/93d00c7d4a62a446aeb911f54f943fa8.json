{"ast":null,"code":"import{useContext}from\"react\";import Feedback from\"../Context/Feedback\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Stats(){var _useContext=useContext(Feedback),feedback=_useContext.feedback;var Reviews=feedback.length;var Sum=feedback.reduce(function(a,b){return a+b.rating;},0);var Average=(Sum/Reviews).toFixed(1).replace(/[.,]0$/,\"\");return/*#__PURE__*/_jsxs(\"div\",{className:\"feedback-stats\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[Reviews,\" Reviews\"]}),isNaN(Average)?null:/*#__PURE__*/_jsxs(\"h4\",{children:[\"Average Rating of \",Average]})]});}export default Stats;","map":{"version":3,"names":["useContext","Feedback","Stats","feedback","Reviews","length","Sum","reduce","a","b","rating","Average","toFixed","replace","isNaN"],"sources":["/Users/osborne/feedback-app/src/Components/Stats.jsx"],"sourcesContent":["import { useContext } from \"react\"\nimport Feedback from \"../Context/Feedback\"\n\nfunction Stats() {\n  const { feedback } = useContext(Feedback)\n  const Reviews = feedback.length\n  let Sum = feedback.reduce((a, b) => a + b.rating, 0)\n  const Average = (Sum / Reviews).toFixed(1).replace(/[.,]0$/, \"\")\n  return (\n    <div className='feedback-stats'>\n      <h4>{Reviews} Reviews</h4>\n      {isNaN(Average) ? null : <h4>Average Rating of {Average}</h4>}\n    </div>\n  )\n}\nexport default Stats\n"],"mappings":"AAAA,OAASA,UAAT,KAA2B,OAA3B,CACA,MAAOC,SAAP,KAAqB,qBAArB,C,6CAEA,QAASC,MAAT,EAAiB,CACf,gBAAqBF,UAAU,CAACC,QAAD,CAA/B,CAAQE,QAAR,aAAQA,QAAR,CACA,GAAMC,QAAO,CAAGD,QAAQ,CAACE,MAAzB,CACA,GAAIC,IAAG,CAAGH,QAAQ,CAACI,MAAT,CAAgB,SAACC,CAAD,CAAIC,CAAJ,QAAUD,EAAC,CAAGC,CAAC,CAACC,MAAhB,EAAhB,CAAwC,CAAxC,CAAV,CACA,GAAMC,QAAO,CAAG,CAACL,GAAG,CAAGF,OAAP,EAAgBQ,OAAhB,CAAwB,CAAxB,EAA2BC,OAA3B,CAAmC,QAAnC,CAA6C,EAA7C,CAAhB,CACA,mBACE,aAAK,SAAS,CAAC,gBAAf,wBACE,sBAAKT,OAAL,cADF,CAEGU,KAAK,CAACH,OAAD,CAAL,CAAiB,IAAjB,cAAwB,2CAAuBA,OAAvB,GAF3B,GADF,CAMD,CACD,cAAeT,MAAf"},"metadata":{},"sourceType":"module"}